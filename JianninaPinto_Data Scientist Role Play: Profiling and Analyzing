Data Scientist Role Play: Profiling and Analyzing the Yelp Dataset Coursera Worksheet

Name: Jiannina Pinto
Date: February 28, 2021

This is a 2-part assignment. In the first part, you are asked a series of questions that will help you profile and understand the data just like a data scientist would. For this first part of the assignment, you will be assessed both on the correctness of your findings, as well as the code you used to arrive at your answer. You will be graded on how easy your code is to read, so remember to use proper formatting and comments where necessary.

In the second part of the assignment, you are asked to come up with your own inferences and analysis of the data for a particular research question you want to answer. You will be required to prepare the dataset for the analysis you choose to do. As with the first part, you will be graded, in part, on how easy your code is to read, so use proper formatting and comments to illustrate and communicate your intent as required.

For both parts of this assignment, use this "worksheet." It provides all the questions you are being asked, and your job will be to transfer your answers and SQL coding where indicated into this worksheet so that your peers can review your work. You should be able to use any Text Editor (Windows Notepad, Apple TextEdit, Notepad ++, Sublime Text, etc.) to copy and paste your answers. If you are going to use Word or some other page layout application, just be careful to make sure your answers and code are lined appropriately.
In this case, you may want to save as a PDF to ensure your formatting remains intact for you reviewer.



Part 1: Yelp Dataset Profiling and Understanding

1. Profile the data by finding the total number of records for each of the tables below:

SELECT COUNT(*)
FROM table_name;
	
i. Attribute table = 10000
ii. Business table = 10000
iii. Category table = 10000
iv. Checkin table = 10000
v. elite_years table = 10000
vi. friend table = 10000
vii. hours table = 10000
viii. photo table = 10000
ix. review table = 10000
x. tip table = 10000
xi. user table = 10000
	


2. Find the total distinct records by either the foreign key or primary key for each table. If two foreign keys are listed in the table, please specify which foreign key.

SELECT COUNT (DISTINCT(t.key))
FROM table t;

i. Business = key: id | records: 10000
ii. Hours = key: business_id | records: 1562
iii. Category = key: business_id | records: 2643
iv. Attribute = key: business_id | records: 1115
v. Review = key: id | records: 10000 / key: business_id | records: 8090 / key: user_id | records: 9581
vi. Checkin = key: business_id | records: 493
vii. Photo = key: id | records: 10000 / key: business_id | records: 6493
viii. Tip = key: business_id | records: 3979 / key: user_id | records: 537 
ix. User = key: user | records: 10000
x. Friend = key: user_id | records: 11 
xi. Elite_years = key: user_id | records: 2780

Note: Primary Keys are denoted in the ER-Diagram with a yellow key icon.	



3. Are there any columns with null values in the Users table? Indicate "yes," or "no."

	Answer: no
	
	
	SQL code used to arrive at answer: 

	SELECT COUNT(*)
	FROM user
	WHERE id IS NULL
		OR name IS NULL
		OR review_count IS NULL
		OR yelping_since IS NULL
		OR useful IS NULL
		OR funny IS NULL
		OR cool IS NULL
		OR fans IS NULL
		OR average_stars IS NULL
		OR compliment_hot IS NULL
		OR compliment_more IS NULL
		OR compliment_profile IS NULL
		OR compliment_cute IS NULL
		OR compliment_list IS NULL
		OR compliment_note IS NULL
		OR compliment_plain IS NULL
		OR compliment_cool IS NULL
		OR compliment_funny IS NULL
		OR compliment_writer IS NULL
		OR compliment_photos IS NULL;

	
	

	
4. For each table and column listed below, display the smallest (minimum), largest (maximum), and average (mean) value for the following fields:

SELECT MIN(column)
, MAX(column)
, AVG(column) 
FROM table;

	i. Table: Review, Column: Stars
	
		min:	1	max:	5	avg:   3.7082
		
	
	ii. Table: Business, Column: Stars
	
		min:	1.0	max:	5.0	avg:   3.6549
		
	
	iii. Table: Tip, Column: Likes
	
		min:	0	max:	2	avg:    0.0144
		
	
	iv. Table: Checkin, Column: Count
	
		min:	1	max:	53	avg:    1.9414
		
	
	v. Table: User, Column: Review_count
	
		min:	0	max:	2000	avg:    24.2995
		


5. List the cities with the most reviews in descending order:

	SQL code used to arrive at answer:
	SELECT b.city
	, SUM (b.review_count) AS TotalReviews
	FROM business b
	GROUP BY b.city
	ORDER BY TotalReviews DESC;
	
	
	Copy and Paste the Result Below:
	+-----------------+--------------+
| city            | TotalReviews |
+-----------------+--------------+
| Las Vegas       |        82854 |
| Phoenix         |        34503 |
| Toronto         |        24113 |
| Scottsdale      |        20614 |
| Charlotte       |        12523 |
| Henderson       |        10871 |
| Tempe           |        10504 |
| Pittsburgh      |         9798 |
| Montréal        |         9448 |
| Chandler        |         8112 |
| Mesa            |         6875 |
| Gilbert         |         6380 |
| Cleveland       |         5593 |
| Madison         |         5265 |
| Glendale        |         4406 |
| Mississauga     |         3814 |
| Edinburgh       |         2792 |
| Peoria          |         2624 |
| North Las Vegas |         2438 |
| Markham         |         2352 |
| Champaign       |         2029 |
| Stuttgart       |         1849 |
| Surprise        |         1520 |
| Lakewood        |         1465 |
| Goodyear        |         1155 |
+-----------------+--------------+
(Output limit exceeded, 25 of 362 total rows shown)

	
6. Find the distribution of star ratings to the business in the following cities:

i. Avon

SQL code used to arrive at answer:

SELECT
b.stars AS StarRating
, SUM (b.review_count) AS Count
FROM business b
WHERE b.city = 'Avon'
GROUP BY b.stars;

Copy and Paste the Resulting Table Below (2 columns â€“ star rating and count):
+------------+-------+
| StarRating | Count |
+------------+-------+
|        1.5 |    10 |
|        2.5 |     6 |
|        3.5 |    88 |
|        4.0 |    21 |
|        4.5 |    31 |
|        5.0 |     3 |
+------------+-------+

ii. Beachwood

SQL code used to arrive at answer:

SELECT
b.stars AS StarRating
, SUM (b.review_count) AS Count
FROM business b
WHERE b.city = 'Beachwood'
GROUP BY b.stars;

Copy and Paste the Resulting Table Below (2 columns â€“ star rating and count):
+------------+-------+
| StarRating | Count |
+------------+-------+
|        2.0 |     8 |
|        2.5 |     3 |
|        3.0 |    11 |
|        3.5 |     6 |
|        4.0 |    69 |
|        4.5 |    17 |
|        5.0 |    23 |
+------------+-------+		


7. Find the top 3 users based on their total number of reviews:
		
	SQL code used to arrive at answer:

	SELECT u.name
	, u.review_count
	FROM user u
	ORDER BY review_count DESC
	LIMIT 3;
	
		
	Copy and Paste the Result Below:
	
	+--------+--------------+
| name   | review_count |
+--------+--------------+
| Gerald |         2000 |
| Sara   |         1629 |
| Yuri   |         1339 |
+--------+--------------+	


8. Does posing more reviews correlate with more fans?

	Please explain your findings and interpretation of the results: 

	In order to conclusively analyze the correlation between the number of reviews and fans,
	it is necessary to find the coefficient between set values. Since functions like CORR are not available with the SQL editor provided on the dashboard,
	the best that I can do is to create my own conclusions based on the small portion of the data that I can see as a result. 
	I don-t think there is a correlation between # of reviews and # of fans because there are various users with a substantial number of fans but very few reviews and reciprocally there are a substantial number of users with many reviews and very few fans. 
	
This is the code I used to get my resuls:
SELECT u.id
,u.name
, u.review_count
, u.fans
FROM user u
ORDER BY fans DESC;

My results:
+------------------------+-----------+--------------+------+
| id                     | name      | review_count | fans |
+------------------------+-----------+--------------+------+
| -9I98YbNQnLdAmcYfb324Q | Amy       |          609 |  503 |
| -8EnCioUmDygAbsYZmTeRQ | Mimi      |          968 |  497 |
| --2vR0DIsmQ6WfcSzKWigw | Harald    |         1153 |  311 |
| -G7Zkl1wIWBBmD0KRy_sCw | Gerald    |         2000 |  253 |
| -0IiMAZI2SsQ7VmyzJjokQ | Christine |          930 |  173 |
| -g3XIcCb2b-BD0QBCcq2Sw | Lisa      |          813 |  159 |
| -9bbDysuiWeo2VShFJJtcw | Cat       |          377 |  133 |
| -FZBTkAZEXoP7CYvRV2ZwQ | William   |         1215 |  126 |
| -9da1xk7zgnnfO1uTVYGkA | Fran      |          862 |  124 |
| -lh59ko3dxChBSZ9U7LfUw | Lissa     |          834 |  120 |
| -B-QEUESGWHPE_889WJaeg | Mark      |          861 |  115 |
| -DmqnhW4Omr3YhmnigaqHg | Tiffany   |          408 |  111 |
| -cv9PPT7IHux7XUc9dOpkg | bernice   |          255 |  105 |
| -DFCC64NXgqrxlO8aLU5rg | Roanna    |         1039 |  104 |
| -IgKkE8JvYNWeGu8ze4P8Q | Angela    |          694 |  101 |
| -K2Tcgh2EKX6e6HqqIrBIQ | .Hon      |         1246 |  101 |
| -4viTt9UC44lWCFJwleMNQ | Ben       |          307 |   96 |
| -3i9bhfvrM3F1wsC9XIB8g | Linda     |          584 |   89 |
| -kLVfaJytOJY2-QdQoCcNQ | Christina |          842 |   85 |
| -ePh4Prox7ZXnEBNGKyUEA | Jessica   |          220 |   84 |
| -4BEUkLvHQntN6qPfKJP2w | Greg      |          408 |   81 |
| -C-l8EHSLXtZZVfUAUhsPA | Nieves    |          178 |   80 |
| -dw8f7FLaUmWR7bfJ_Yf0w | Sui       |          754 |   78 |
| -8lbUNlXVSoXqaRRiHiSNg | Yuri      |         1339 |   76 |
| -0zEEaDFIjABtPQni0XlHA | Nicole    |          161 |   73 |
+------------------------+-----------+--------------+------+
(Output limit exceeded, 25 of 10000 total rows shown)
	
9. Are there more reviews with the word "love" or with the word "hate" in them?

	Answer: There are more reviews that contain the word love in them. Love always wins.

	
	SQL code used to arrive at answer:

	SELECT COUNT(*)
	FROM review r
	WHERE text LIKE '%love%'

	Result: 1780

	SELECT COUNT(*)
	FROM review r
	WHERE text LIKE '%hate%' 

	Result: 232


	
10. Find the top 10 users with the most fans:

	SQL code used to arrive at answer:
	
	SELECT u.id
	,u.name
	, u.fans
	FROM user u
	ORDER BY fans DESC
	LIMIT 10;
	
	Copy and Paste the Result Below:
+------------------------+-----------+------+
| id                     | name      | fans |
+------------------------+-----------+------+
| -9I98YbNQnLdAmcYfb324Q | Amy       |  503 |
| -8EnCioUmDygAbsYZmTeRQ | Mimi      |  497 |
| --2vR0DIsmQ6WfcSzKWigw | Harald    |  311 |
| -G7Zkl1wIWBBmD0KRy_sCw | Gerald    |  253 |
| -0IiMAZI2SsQ7VmyzJjokQ | Christine |  173 |
| -g3XIcCb2b-BD0QBCcq2Sw | Lisa      |  159 |
| -9bbDysuiWeo2VShFJJtcw | Cat       |  133 |
| -FZBTkAZEXoP7CYvRV2ZwQ | William   |  126 |
| -9da1xk7zgnnfO1uTVYGkA | Fran      |  124 |
| -lh59ko3dxChBSZ9U7LfUw | Lissa     |  120 |
+------------------------+-----------+------+
	
		

Part 2: Inferences and Analysis

1. Pick one city and category of your choice and group the businesses in that city or category by their overall star rating. Compare the businesses with 2-3 stars to the businesses with 4-5 stars and answer the following questions. Include your code.
	
i. Do the two groups you chose to analyze have a different distribution of hours?
	The group of restaurants in Toronto that have 2-3 stars mostly open their doors to the public in the morning, while the group of restaurants that have 
	4-5 stars open their doors to the public in the afternoon and evening.

ii. Do the two groups you chose to analyze have a different number of reviews?
    Yes, they do. The restaurants that open in the morning tend to have less reviews than the ones that open later in the afternoon or evening.     
         
iii. Are you able to infer anything from the location data provided between these two groups? Explain.
	 It seems like in Toronto people prefer restaurants that open in the afternoon or evening because according to the data, they tend to get more and better reviews.

SQL code used for analysis:

SELECT b.name
, b.city
, b.stars
, b.review_count
, h.hours
, c.category
, CASE 
    WHEN (h.hours LIKE '%|3%' OR h.hours LIKE '%|4%' 
    OR h.hours LIKE '%|5%' OR h.hours LIKE '%|6%' OR h.hours LIKE '%|7%' OR h.hours LIKE '%|8%' 
    OR h.hours LIKE '%|9%' OR h.hours LIKE '%10%' OR h.hours LIKE '%11%') THEN 'Morning'
    WHEN (h.hours LIKE '%12%' OR h.hours LIKE '%13%' OR h.hours LIKE '%14%' OR h.hours LIKE '%15%' 
    OR h.hours LIKE '%16%' OR h.hours LIKE '%17%') THEN 'Afternoon'
    WHEN (h.hours LIKE '%18%' OR h.hours LIKE '%19%' OR h.hours LIKE '%20%' OR h.hours LIKE '%21%' 
    OR h.hours LIKE '%22%' OR h.hours LIKE '%23%') THEN 'Evening/Night'
END AS OpenAt
, CASE
    WHEN b.stars BETWEEN 2 AND 3 THEN '2-3 stars'
    WHEN b.stars BETWEEN 4 AND 5 THEN '4-5 stars'
END AS StarRating
FROM business b
INNER JOIN category c
ON b.id = c.business_id
INNER JOIN hours h
ON b.id = h.business_id
WHERE b.city = 'Toronto' AND c.category= 'Restaurants'
AND
(b.stars BETWEEN 2 AND 3
OR
b.stars BETWEEN 4 AND 5)
GROUP BY stars, OpenAt
ORDER BY OpenAt, StarRating ASC;
		
2. Group business based on the ones that are open and the ones that are closed. What differences can you find between the ones that are still open and the ones that are closed? List at least two differences and the SQL code you used to arrive at your answer.
		
i. Difference 1:
The average number of stars for the businesses that are closed is 3.52 while the average number of stars for the businesses that are open is 3.68
         
         
ii. Difference 2:
The businesses that are open have way more revies (269300) than the ones that are closed (35261).        
         
         
SQL code used for analysis:

SELECT COUNT(DISTINCT(b.id)),
			   AVG(b.review_count),
			   SUM(b.review_count),
			   AVG(b.stars),
			   is_open
		FROM business b
		GROUP BY is_open

My results:

+-----------------------+---------------------+---------------------+---------------+---------+
| COUNT(DISTINCT(b.id)) | AVG(b.review_count) | SUM(b.review_count) |  AVG(b.stars) | is_open |
+-----------------------+---------------------+---------------------+---------------+---------+
|                  1520 |       23.1980263158 |               35261 | 3.52039473684 |       0 |
|                  8480 |       31.7570754717 |              269300 | 3.67900943396 |       1 |
+-----------------------+---------------------+---------------------+---------------+---------+
	
	
3. For this last part of your analysis, you are going to choose the type of analysis you want to conduct on the Yelp dataset and are going to prepare the data for analysis.

Ideas for analysis include: Parsing out keywords and business attributes for sentiment analysis, clustering businesses to find commonalities or anomalies between them, predicting the overall star rating for a business, predicting the number of fans a user will have, and so on. These are just a few examples to get you started, so feel free to be creative and come up with your own problem you want to solve. Provide answers, in-line, to all of the following:
	
i. Indicate the type of analysis you chose to do:
   I want to analyze the tips that the Mad Mex restaurant received on Yelp to know how many of the tips were positive and how many were negative. This would give owners, employees and clients insight into whether the restaurant receives more positive or negative feedback.    
         
ii. Write 1-2 brief paragraphs on the type of data you will need for your analysis and why you chose that data:
    For this analysis I will need the attributes name and city from the business table. I will also retrieve the text from the tips table and filter the analysis based on the Restaurants category.
    I chose this data because it will give me the information I need to identify the business and the feedback that they are giving not only to the restaurant owners and managers but also to potential clients.

                  
iii. Output of your finished dataset:
+-----------------------+------------+------------------+------------------+
| name                  | city       | PositiveFeedback | NegativeFeedback |
+-----------------------+------------+------------------+------------------+
| Mad Mex - South Hills | Pittsburgh |                9 |                1 |
+-----------------------+------------+------------------+------------------+
         
iv. Provide the SQL code you used to create your final dataset:

SELECT b.name
, b.city
, SUM(t.text LIKE '%love%' OR t.text LIKE '%great%' OR t.text LIKE '%happy%' OR 
t.text LIKE '%best%' OR t.text LIKE '%good%') AS PositiveFeedback
, SUM(t.text LIKE '%bad%' OR t.text LIKE '%hate%' OR t.text LIKE '%horrible%' OR 
t.text LIKE '%worst%' OR t.text LIKE '%terrible%') AS NegativeFeedback
FROM category c INNER JOIN tip t
ON c.business_id = t.business_id
INNER JOIN business b 
ON t.business_id = b.id
WHERE c.category = 'Restaurants'
AND b.name='Mad Mex - South Hills';